Background:

The STLC here has the typical typing rules. It also has a single atomic type,
top, which has no elements. The rules for reduction (which we will be referring
to as stepping) are:

m1 ~~> m2
============= step-app1
m1 n ~~> m2 n

n1 ~~> n2
============= step-app2
m n1 ~~> m n2


====================== step-beta
(λx:T.r) n ~~> [x->n]r

r1 ~~> r2
=================== step-abs
λx:T.r1 ~~> λx:T.r2

A term is strongly normalizing if any term which is setps to is also
strongly normalizing.

A term m is reducible of type T (denoted m ∈ RED(T)) by one of two cases:
- reduce-top: T is top, m has type top and m is strongly normalizing.
- reduce-arr: T is T1 → T2, m has type T and, for all terms n such that n is
  reducible of type T1, (m n) is reducible of type T2.

Theorem CR2: forall terms m1 and m2 and type T, if m1 is reducible of type T and
m1 steps to m2, then m2 is reducible of type T.

Proof:

We will prove this by induction on the structure of the type T. Proceed by cases
on the structure of type T.

top case:
  T = top
  m1 : top

In this case, we know that m1 being reducible of type T must have been proven
using reduce-top, which means we know m1 is strongly normalizing. By subject
reduction, since m1 : top and m1 steps to m2, we know m2 : top. By the
definition of strong normalization, since m1 is strongly normalizing and m1
steps to m2 we know m2 is strongly normalizing. Therefore by reduce-top m2 is
reducible of type T.

arrow case:
  T = T1 → T2
  m1 : T1 → T2
  ∀n . n ∈ RED(T1) => (m1 n) ∈ RED(T2)

By the step-app1 rule, since m1 steps to m2 (m1 n) steps to (m2 n). By the
inductive hypothesis, we can therefore conclude that forall n, if n ∈ RED(T1)
then (m2 n) ∈ RED(T2). By subject reduction, we know m2 has type T1 → T2.
Therefore, by reduce-arr, we know that m2 is reducible of type T1 → T2.
